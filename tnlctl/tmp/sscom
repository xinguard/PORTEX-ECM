#!/bin/bash
#
#Revision:2018110404
#

export PATH=/sbin:${PATH}

PROG_NAME=sscom

INPUT=/tmp/${PROG_NAME}-input.$$
OUTPUT=/tmp/${PROG_NAME}-output.$$

# trap and delete temp files
trap "rm $OUTPUT; rm $INPUT; exit" SIGHUP SIGINT SIGTERM

#
# Purpose - display output using msgbox
#  $1 -> set msgbox height
#  $2 -> set msgbox width
#  $3 -> set msgbox title
#
function display_output(){
    local h=${1-10}        # box height default 10
    local w=${2-41}        # box width default 41
    local t=${3-Output}    # box title
    dialog --backtitle "SS Menu Output" --title "${t}" --clear --msgbox "$(<$OUTPUT)" ${h} ${w}
}
#
# Purpose - display a system info
#
function show_usbinfo(){
    ls -l /dev/ttyUSB* > $OUTPUT
    display_output 20 80 "USB Ports Info"
}
#
# set infinite loop
#
while true
do

    ### display main menu ###
    dialog --clear  --help-button --backtitle "MCSC SS USB CONSOLE" \
    --timeout 300 \
    --title "[ USB - CONSOLE ]" \
    --menu "Choose a task or USB port to manage" 20 50 12 \
        "USB Info" "Display USB Ports Info" \
            "Exit" "Exit to Main Menu" \
            "USB0" "Manage USB0" \
            "USB1" "Manage USB1" \
            "USB2" "Manage USB2" \
            "USB3" "Manage USB3" \
            "USB4" "Manage USB4" \
            "USB5" "Manage USB5" \
            "USB6" "Manage USB6" \
            "USB7" "Manage USB7" \
            "USB8" "Manage USB8" \
            "USB9" "Manage USB9" \
            "USB10" "Manage USB10" \
            "USB11" "Manage USB11" \
            "USB12" "Manage USB12" \
            "USB13" "Manage USB13" \
            "USB14" "Manage USB14" \
            "USB15" "Manage USB15" 2>"${INPUT}"

    _status=$?
    if [ ${_status} -eq 255 ]
    then
        # got dialog timeout
        exit 0
    fi

    menuitem=$(<"${INPUT}")

    # make decsion
    case $menuitem in
        "USB Info") show_usbinfo;;
            "Exit") exit 0;;
            #"USB"*) [ -e /dev/tty${menuitem} ] && minicom ${menuitem};;
            "USB"*) ./sscomsub ${menuitem};;
    esac

done

# if temp files found, delete em
[ -f $OUTPUT ] && rm $OUTPUT
[ -f $INPUT ] && rm $INPUT

