#!/bin/bash
#
#    File: ssmods
#   Descr: show sub modules menu for shared user (ssuser)
#
#Revision:2018101802
#

export PATH=/sbin:${PATH}

INPUT=/tmp/ssmods-input.$$
OUTPUT=/tmp/ssmods-output.$$

SUBMODS_DIR=${TEST_SUBMODS_DIR:-/opt/mcs/submods}/

# trap and delete temp files
trap "rm $OUTPUT; rm $INPUT; exit" SIGHUP SIGINT SIGTERM

#
# Purpose - display output using msgbox
#  $1 -> set msgbox height
#  $2 -> set msgbox width
#  $3 -> set msgbox title
#
function display_output(){
    local h=${1-10}        # box height default 10
    local w=${2-41}        # box width default 41
    local t=${3-Output}    # box title
    dialog --backtitle "SS Menu Output" --title "${t}" --clear --msgbox "$(<$OUTPUT)" ${h} ${w}
}
#
# Purpose - display a system info
#
function show_xxx_info(){
    echo "result: XXX" > $OUTPUT
    display_output 20 80 "Current XXX Status"
}
#
# set infinite loop
#
while true
do
    _mod_items=()
    for submod in `ls ${SUBMODS_DIR}/`
    do
        _mod_descr=`cat ${SUBMODS_DIR}/${submod}/descr`
        _mod_items+=("${submod}" "${_mod_descr}")
    done

    ### display a sub menu ###
    dialog --clear  --help-button --backtitle "MCSC SS Sub Menu of Modules" \
    --timeout 300 \
    --title "[ Sub Menu of Modules ]" \
    --menu "Choose a module to run" 20 50 12 \
        "${_mod_items[@]}" \
        Exit "Exit to Main Menu" 2>"${INPUT}"

    _status=$?
    if [ ${_status} -eq 255 ]
    then
        # got dialog timeout
        exit 0
    fi

    menuitem=$(<"${INPUT}")

    # make decsion
    case $menuitem in
        Exit) exit 0;;
        *) echo ${menuitem};
           _do=${SUBMODS_DIR}/${menuitem}/scripts/do.sh
           if [ -f ${_do} ]
           then
               bash ${_do}
           else
               echo "No script for module ${menuitem} to run..." > $OUTPUT
               display_output 20 80 "WARNNING"
           fi
    esac

done

# if temp files found, delete em
[ -f $OUTPUT ] && rm $OUTPUT
[ -f $INPUT ] && rm $INPUT

